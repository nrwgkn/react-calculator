{"version":3,"sources":["reducers/calculator.js","utils/actionTypes.js","reducers/index.js","components/NumButton.js","components/OperatorButton.js","components/Result.js","components/Calculator.js","actions/index.js","containers/CalculatorContainer.js","index.js"],"names":["initialState","inputValue","resultValue","operator","isCalculate","isShowResult","history","calculator","state","action","newHistory","type","number","newResult","reducer","combineReducers","NumButton","n","onClick","OperatorButton","o","className","Result","result","Calculator","actions","style","color","fontSize","textAlign","width","colSpan","map","item","onNumClick","onDivideClick","onMultiplyClick","onMinusClick","onClearClick","onEqualClick","onPlusClick","connect","dispatch","bindActionCreators","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c17b85b.chunk.js","sourcesContent":["import * as actionTypes from \"../utils/actionTypes\";\n\nconst initialState = {\n  inputValue: 0,\n  resultValue: 0,\n  operator: \"\",\n  isCalculate: false,\n  isShowResult: false,\n  history: [],\n};\n\nconst calculator = (state = initialState, action) => {\n  const newHistory = [];\n\n  switch (action.type) {\n    case actionTypes.INPUT_NUMBER:\n      if (state.operator === \"=\") {\n        return {\n          ...state,\n          inputValue: action.number,\n          isShowResult: false,\n          history: [...newHistory, action.number],\n        };\n      } else {\n        return {\n          ...state,\n          inputValue: state.inputValue * 10 + action.number,\n          isShowResult: false,\n          history: [...state.history, action.number],\n        };\n      }\n    case actionTypes.PLUS:\n      if (state.isCalculate) {\n        switch (state.operator) {\n          case \"+\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"+\",\n              resultValue: state.resultValue + state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"+\"],\n            };\n          case \"-\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"+\",\n              resultValue: state.resultValue - state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"+\"],\n            };\n          case \"*\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"+\",\n              resultValue: state.resultValue * state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"+\"],\n            };\n          case \"/\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"+\",\n              resultValue: state.resultValue / state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"+\"],\n            };\n          default:\n            return state;\n        }\n      } else {\n        return {\n          ...state,\n          inputValue: 0,\n          resultValue: state.inputValue,\n          operator: \"+\",\n          isCalculate: true,\n          isShowResult: true,\n          history: [...state.history, \"+\"],\n        };\n      }\n    case actionTypes.MINUS:\n      if (state.isCalculate) {\n        switch (state.operator) {\n          case \"+\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"-\",\n              resultValue: state.resultValue + state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"-\"],\n            };\n          case \"-\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"-\",\n              resultValue: state.resultValue - state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"-\"],\n            };\n          case \"*\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"-\",\n              resultValue: state.resultValue * state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"-\"],\n            };\n          case \"/\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"-\",\n              resultValue: state.resultValue / state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"-\"],\n            };\n          default:\n            return state;\n        }\n      } else {\n        return {\n          ...state,\n          inputValue: 0,\n          operator: \"-\",\n          resultValue: state.inputValue,\n          isCalculate: true,\n          isShowResult: true,\n          history: [...state.history, \"-\"],\n        };\n      }\n    case actionTypes.MULTIPLY:\n      if (state.isCalculate) {\n        switch (state.operator) {\n          case \"+\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"*\",\n              resultValue: state.resultValue + state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"×\"],\n            };\n          case \"-\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"*\",\n              resultValue: state.resultValue - state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"×\"],\n            };\n          case \"*\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"*\",\n              resultValue: state.resultValue * state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"×\"],\n            };\n          case \"/\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"*\",\n              resultValue: state.resultValue / state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"×\"],\n            };\n          default:\n            return state;\n        }\n      } else {\n        return {\n          ...state,\n          inputValue: 0,\n          resultValue: state.inputValue,\n          operator: \"*\",\n          isCalculate: true,\n          isShowResult: true,\n          history: [...state.history, \"×\"],\n        };\n      }\n    case actionTypes.DIVIDE:\n      if (state.isCalculate) {\n        switch (state.operator) {\n          case \"+\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"/\",\n              resultValue: state.resultValue + state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"÷\"],\n            };\n          case \"-\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"/\",\n              resultValue: state.resultValue - state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"÷\"],\n            };\n          case \"*\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"/\",\n              resultValue: state.resultValue * state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"÷\"],\n            };\n          case \"/\":\n            return {\n              ...state,\n              inputValue: 0,\n              operator: \"/\",\n              resultValue: state.resultValue / state.inputValue,\n              isShowResult: true,\n              history: [...state.history, \"÷\"],\n            };\n          default:\n            return state;\n        }\n      } else {\n        return {\n          ...state,\n          inputValue: 0,\n          resultValue: state.inputValue,\n          operator: \"/\",\n          isCalculate: true,\n          isShowResult: true,\n          history: [...state.history, \"÷\"],\n        };\n      }\n    case actionTypes.ALL_CLEAR:\n      return {\n        inputValue: 0,\n        resultValue: 0,\n        operator: \"\",\n        isCalculate: false,\n        isShowResult: false,\n        history: [],\n      };\n\n    case actionTypes.EQUAL:\n      let newResult;\n      switch (state.operator) {\n        case \"+\":\n          newResult = state.resultValue + state.inputValue;\n          return {\n            inputValue: state.resultValue + state.inputValue,\n            operator: \"=\",\n            resultValue: state.resultValue + state.inputValue,\n            isCalculate: false,\n            isShowResult: true,\n            history: [...state.history, \"=\" + newResult],\n          };\n        case \"-\":\n          newResult = state.resultValue - state.inputValue;\n          return {\n            inputValue: state.resultValue - state.inputValue,\n            operator: \"=\",\n            resultValue: state.resultValue - state.inputValue,\n            isCalculate: false,\n            isShowResult: true,\n            history: [...state.history, \"=\" + newResult],\n          };\n        case \"*\":\n          newResult = state.resultValue * state.inputValue;\n          return {\n            inputValue: state.resultValue * state.inputValue,\n            operator: \"=\",\n            resultValue: state.resultValue * state.inputValue,\n            isCalculate: false,\n            isShowResult: true,\n            history: [...state.history, \"=\" + newResult],\n          };\n        case \"/\":\n          newResult = state.resultValue / state.inputValue;\n          return {\n            inputValue: state.resultValue / state.inputValue,\n            operator: \"=\",\n            resultValue: state.resultValue / state.inputValue,\n            isCalculate: false,\n            isShowResult: true,\n            history: [...state.history, \"=\" + newResult],\n          };\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n};\n\nexport default calculator;\n","// 数値入力\nexport const INPUT_NUMBER = \"INPUT_NUMBER\";\n// 演算子入力\nexport const PLUS = \"PLUS\";\nexport const MINUS = \"MINUS\";\nexport const MULTIPLY = \"MULTIPLY\";\nexport const DIVIDE = \"DIVIDE\";\n// イコール、クリア入力\nexport const EQUAL = \"EQUAL\";\nexport const ALL_CLEAR = \"ALL_CLEAR\";\n","import { combineReducers } from \"redux\";\nimport calculator from \"./calculator\";\n\nconst reducer = combineReducers({\n  calculator,\n});\n\nexport default reducer;\n","import React from \"react\";\n\nconst NumButton = ({ n, onClick }) => <button onClick={onClick}>{n}</button>;\n\nexport default NumButton;\n","import React from \"react\";\n\nconst OperatorButton = ({ o, onClick }) => (\n  <button onClick={onClick} className=\"p-operator\">\n    {o}\n  </button>\n);\n\nexport default OperatorButton;\n","import React from \"react\";\n\nconst Result = ({ result }) => <div>{result}</div>;\n\nexport default Result;\n","import React from \"react\";\nimport NumButton from \"./NumButton\";\nimport OperatorButton from \"./OperatorButton\";\nimport Result from \"./Result\";\n\nconst Calculator = ({ calculator, actions }) => {\n  const titleStyle = {\n    color: \"#8b646c\",\n    fontSize: \"4rem\",\n    textAlign: \"center\",\n    width: \"300px\",\n  };\n\n  return (\n    <>\n      <h1 style={titleStyle}>calculator</h1>\n      <table className=\"p-calc\">\n        <thead className=\"p-calc__head\">\n          <tr>\n            <td colSpan=\"4\">\n              <ul className=\"p-calc__history\">\n                {calculator.history.map((item) => {\n                  return <li>{item}</li>;\n                })}\n              </ul>\n              <Result\n                result={\n                  calculator.isShowResult\n                    ? calculator.resultValue\n                    : calculator.inputValue\n                }\n                history={calculator.history}\n              />\n            </td>\n          </tr>\n        </thead>\n        <tbody className=\"p-calc__body\">\n          <tr className=\"p-calc__row\">\n            <td>\n              <NumButton n={7} onClick={() => actions.onNumClick(7)} />\n            </td>\n            <td>\n              <NumButton n={8} onClick={() => actions.onNumClick(8)} />\n            </td>\n            <td>\n              <NumButton n={9} onClick={() => actions.onNumClick(9)} />\n            </td>\n            <td>\n              <OperatorButton o={\"÷\"} onClick={() => actions.onDivideClick()} />\n            </td>\n          </tr>\n          <tr className=\"p-calc__row\">\n            <td>\n              <NumButton n={4} onClick={() => actions.onNumClick(4)} />\n            </td>\n            <td>\n              <NumButton n={5} onClick={() => actions.onNumClick(5)} />\n            </td>\n            <td>\n              <NumButton n={6} onClick={() => actions.onNumClick(6)} />\n            </td>\n            <td>\n              <OperatorButton\n                o={\"×\"}\n                onClick={() => actions.onMultiplyClick()}\n              />\n            </td>\n          </tr>\n          <tr className=\"p-calc__row\">\n            <td>\n              <NumButton n={1} onClick={() => actions.onNumClick(1)} />\n            </td>\n            <td>\n              <NumButton n={2} onClick={() => actions.onNumClick(2)} />\n            </td>\n            <td>\n              <NumButton n={3} onClick={() => actions.onNumClick(3)} />\n            </td>\n            <td>\n              <OperatorButton o={\"-\"} onClick={() => actions.onMinusClick()} />\n            </td>\n          </tr>\n          <tr className=\"p-calc__row\">\n            <td>\n              <NumButton n={0} onClick={() => actions.onNumClick(0)} />\n            </td>\n            <td>\n              <OperatorButton o={\"AC\"} onClick={() => actions.onClearClick()} />\n            </td>\n            <td>\n              <OperatorButton o={\"=\"} onClick={() => actions.onEqualClick()} />\n            </td>\n            <td>\n              <OperatorButton o={\"+\"} onClick={() => actions.onPlusClick()} />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Calculator;\n","import * as actionTypes from \"../utils/actionTypes\";\n\nexport const onNumClick = (number) => ({\n  type: actionTypes.INPUT_NUMBER,\n  number,\n});\n\nexport const onPlusClick = () => ({\n  type: actionTypes.PLUS,\n});\n\nexport const onMinusClick = () => ({\n  type: actionTypes.MINUS,\n});\n\nexport const onMultiplyClick = () => ({\n  type: actionTypes.MULTIPLY,\n});\n\nexport const onDivideClick = () => ({\n  type: actionTypes.DIVIDE,\n});\n\nexport const onEqualClick = () => ({\n  type: actionTypes.EQUAL,\n});\n\nexport const onClearClick = () => ({\n  type: actionTypes.ALL_CLEAR,\n});\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Calculator from \"../components/Calculator\";\nimport * as actions from \"../actions\";\nimport \"./CalculatorContainer.css\";\n\nconst mapStateToProps = (state) => ({\n  calculator: state.calculator,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport CalculatorContainer from \"./containers/CalculatorContainer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CalculatorContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}